name: Vercel Production Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID || 'dummy-org-id' }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID || 'dummy-project-id' }}
  NODE_VERSION: '18'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm run install-deps
      - name: Run Unit Tests
        run: npm run test:client

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm run install-deps
      - name: Run Integration Tests
        run: npm run test:server

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm run install-deps
      - name: Run E2E Tests
        run: |
          cd e2e
          npm install
          npm run test:e2e

  deploy:
    needs: [unit-tests, integration-tests, e2e-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Dependencies
        run: |
          npm install
          npm run install-deps
          npm audit fix --force
      - name: Security Audit and Fix
        run: npm run apply-security-fixes
      - name: Build and Deploy
        env:
          REACT_APP_GEMINI_API_KEY: ${{ secrets.REACT_APP_GEMINI_API_KEY || 'dummy-key' }}
          MONGODB_URI: ${{ secrets.MONGODB_URI || 'mongodb://localhost:27017/test' }}
          AI_API_KEY: ${{ secrets.AI_API_KEY || 'dummy-key' }}
          NODE_ENV: production
          SKIP_PREFLIGHT_CHECK: true
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          npm install --global vercel@latest
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN || 'dummy-token' }} || echo "Pull failed"
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN || 'dummy-token' }} || npm run build
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN || 'dummy-token' }} || echo "Deploy failed"
